diff --git a/drivers/clk/imx/clk-imx8mp-audiomix.c b/drivers/clk/imx/clk-imx8mp-audiomix.c
index b381d6f..55ed211 100644
--- a/drivers/clk/imx/clk-imx8mp-audiomix.c
+++ b/drivers/clk/imx/clk-imx8mp-audiomix.c
@@ -7,12 +7,10 @@
 
 #include <linux/clk-provider.h>
 #include <linux/device.h>
-#include <linux/io.h>
 #include <linux/mod_devicetable.h>
 #include <linux/module.h>
 #include <linux/of.h>
 #include <linux/platform_device.h>
-#include <linux/pm_runtime.h>
 
 #include <dt-bindings/clock/imx8mp-clock.h>
 
@@ -20,7 +18,6 @@
 
 #define CLKEN0			0x000
 #define CLKEN1			0x004
-#define EARC			0x200
 #define SAI1_MCLK_SEL		0x300
 #define SAI2_MCLK_SEL		0x304
 #define SAI3_MCLK_SEL		0x308
@@ -29,11 +26,6 @@
 #define SAI7_MCLK_SEL		0x314
 #define PDM_SEL			0x318
 #define SAI_PLL_GNRL_CTL	0x400
-#define SAI_PLL_FDIVL_CTL0	0x404
-#define SAI_PLL_FDIVL_CTL1	0x408
-#define SAI_PLL_SSCG_CTL	0x40C
-#define SAI_PLL_MNIT_CTL	0x410
-#define IPG_LP_CTRL		0x504
 
 #define SAIn_MCLK1_PARENT(n)						\
 static const struct clk_parent_data					\
@@ -190,82 +182,26 @@ static struct clk_imx8mp_audiomix_sel sels[] = {
 	CLK_SAIn(7)
 };
 
-static const u16 audiomix_regs[] = {
-	CLKEN0,
-	CLKEN1,
-	EARC,
-	SAI1_MCLK_SEL,
-	SAI2_MCLK_SEL,
-	SAI3_MCLK_SEL,
-	SAI5_MCLK_SEL,
-	SAI6_MCLK_SEL,
-	SAI7_MCLK_SEL,
-	PDM_SEL,
-	SAI_PLL_GNRL_CTL,
-	SAI_PLL_FDIVL_CTL0,
-	SAI_PLL_FDIVL_CTL1,
-	SAI_PLL_SSCG_CTL,
-	SAI_PLL_MNIT_CTL,
-	IPG_LP_CTRL,
-};
-
-struct clk_imx8mp_audiomix_priv {
-	void __iomem *base;
-	u32 regs_save[ARRAY_SIZE(audiomix_regs)];
-
-	/* Must be last */
-	struct clk_hw_onecell_data clk_data;
-};
-
-static void clk_imx8mp_audiomix_save_restore(struct device *dev, bool save)
-{
-	struct clk_imx8mp_audiomix_priv *priv = dev_get_drvdata(dev);
-	void __iomem *base = priv->base;
-	int i;
-
-	if (save) {
-		for (i = 0; i < ARRAY_SIZE(audiomix_regs); i++)
-			priv->regs_save[i] = readl(base + audiomix_regs[i]);
-	} else {
-		for (i = 0; i < ARRAY_SIZE(audiomix_regs); i++)
-			writel(priv->regs_save[i], base + audiomix_regs[i]);
-	}
-}
-
 static int clk_imx8mp_audiomix_probe(struct platform_device *pdev)
 {
-	struct clk_imx8mp_audiomix_priv *priv;
-	struct clk_hw_onecell_data *clk_hw_data;
+	struct clk_hw_onecell_data *priv;
 	struct device *dev = &pdev->dev;
 	void __iomem *base;
 	struct clk_hw *hw;
-	int i, ret;
+	int i;
 
 	priv = devm_kzalloc(dev,
-			    struct_size(priv, clk_data.hws, IMX8MP_CLK_AUDIOMIX_END),
+			    struct_size(priv, hws, IMX8MP_CLK_AUDIOMIX_END),
 			    GFP_KERNEL);
 	if (!priv)
 		return -ENOMEM;
 
-	clk_hw_data = &priv->clk_data;
-	clk_hw_data->num = IMX8MP_CLK_AUDIOMIX_END;
+	priv->num = IMX8MP_CLK_AUDIOMIX_END;
 
 	base = devm_platform_ioremap_resource(pdev, 0);
 	if (IS_ERR(base))
 		return PTR_ERR(base);
 
-	priv->base = base;
-	dev_set_drvdata(dev, priv);
-
-	/*
-	 * pm_runtime_enable needs to be called before clk register.
-	 * That is to make core->rpm_enabled to be true for clock
-	 * usage.
-	 */
-	pm_runtime_get_noresume(dev);
-	pm_runtime_set_active(dev);
-	pm_runtime_enable(dev);
-
 	for (i = 0; i < ARRAY_SIZE(sels); i++) {
 		if (sels[i].num_parents == 1) {
 			hw = devm_clk_hw_register_gate_parent_data(dev,
@@ -280,12 +216,10 @@ static int clk_imx8mp_audiomix_probe(struct platform_device *pdev)
 				0, NULL, NULL);
 		}
 
-		if (IS_ERR(hw)) {
-			ret = PTR_ERR(hw);
-			goto err_clk_register;
-		}
+		if (IS_ERR(hw))
+			return PTR_ERR(hw);
 
-		clk_hw_data->hws[sels[i].clkid] = hw;
+		priv->hws[sels[i].clkid] = hw;
 	}
 
 	/* SAI PLL */
@@ -294,84 +228,39 @@ static int clk_imx8mp_audiomix_probe(struct platform_device *pdev)
 		ARRAY_SIZE(clk_imx8mp_audiomix_pll_parents),
 		CLK_SET_RATE_NO_REPARENT, base + SAI_PLL_GNRL_CTL,
 		0, 2, 0, NULL, NULL);
-	clk_hw_data->hws[IMX8MP_CLK_AUDIOMIX_SAI_PLL_REF_SEL] = hw;
+	priv->hws[IMX8MP_CLK_AUDIOMIX_SAI_PLL_REF_SEL] = hw;
 
 	hw = imx_dev_clk_hw_pll14xx(dev, "sai_pll", "sai_pll_ref_sel",
 				    base + 0x400, &imx_1443x_pll);
-	if (IS_ERR(hw)) {
-		ret = PTR_ERR(hw);
-		goto err_clk_register;
-	}
-	clk_hw_data->hws[IMX8MP_CLK_AUDIOMIX_SAI_PLL] = hw;
+	if (IS_ERR(hw))
+		return PTR_ERR(hw);
+	priv->hws[IMX8MP_CLK_AUDIOMIX_SAI_PLL] = hw;
 
 	hw = devm_clk_hw_register_mux_parent_data_table(dev,
 		"sai_pll_bypass", clk_imx8mp_audiomix_pll_bypass_sels,
 		ARRAY_SIZE(clk_imx8mp_audiomix_pll_bypass_sels),
 		CLK_SET_RATE_NO_REPARENT | CLK_SET_RATE_PARENT,
 		base + SAI_PLL_GNRL_CTL, 16, 1, 0, NULL, NULL);
-	if (IS_ERR(hw)) {
-		ret = PTR_ERR(hw);
-		goto err_clk_register;
-	}
-
-	clk_hw_data->hws[IMX8MP_CLK_AUDIOMIX_SAI_PLL_BYPASS] = hw;
+	if (IS_ERR(hw))
+		return PTR_ERR(hw);
+	priv->hws[IMX8MP_CLK_AUDIOMIX_SAI_PLL_BYPASS] = hw;
 
 	hw = devm_clk_hw_register_gate(dev, "sai_pll_out", "sai_pll_bypass",
 				       0, base + SAI_PLL_GNRL_CTL, 13,
 				       0, NULL);
-	if (IS_ERR(hw)) {
-		ret = PTR_ERR(hw);
-		goto err_clk_register;
-	}
-	clk_hw_data->hws[IMX8MP_CLK_AUDIOMIX_SAI_PLL_OUT] = hw;
+	if (IS_ERR(hw))
+		return PTR_ERR(hw);
+	priv->hws[IMX8MP_CLK_AUDIOMIX_SAI_PLL_OUT] = hw;
 
 	hw = devm_clk_hw_register_fixed_factor(dev, "sai_pll_out_div2",
 					       "sai_pll_out", 0, 1, 2);
-	if (IS_ERR(hw)) {
-		ret = PTR_ERR(hw);
-		goto err_clk_register;
-	}
-
-	ret = devm_of_clk_add_hw_provider(&pdev->dev, of_clk_hw_onecell_get,
-					  clk_hw_data);
-	if (ret)
-		goto err_clk_register;
-
-	pm_runtime_put_sync(dev);
-	return 0;
-
-err_clk_register:
-	pm_runtime_put_sync(dev);
-	pm_runtime_disable(dev);
-	return ret;
-}
-
-static void clk_imx8mp_audiomix_remove(struct platform_device *pdev)
-{
-	pm_runtime_disable(&pdev->dev);
-}
-
-static int clk_imx8mp_audiomix_runtime_suspend(struct device *dev)
-{
-	clk_imx8mp_audiomix_save_restore(dev, true);
+	if (IS_ERR(hw))
+		return PTR_ERR(hw);
 
-	return 0;
+	return devm_of_clk_add_hw_provider(&pdev->dev, of_clk_hw_onecell_get,
+					   priv);
 }
 
-static int clk_imx8mp_audiomix_runtime_resume(struct device *dev)
-{
-	clk_imx8mp_audiomix_save_restore(dev, false);
-
-	return 0;
-}
-
-static const struct dev_pm_ops clk_imx8mp_audiomix_pm_ops = {
-	RUNTIME_PM_OPS(clk_imx8mp_audiomix_runtime_suspend,
-		       clk_imx8mp_audiomix_runtime_resume, NULL)
-	SET_NOIRQ_SYSTEM_SLEEP_PM_OPS(pm_runtime_force_suspend,
-				      pm_runtime_force_resume)
-};
-
 static const struct of_device_id clk_imx8mp_audiomix_of_match[] = {
 	{ .compatible = "fsl,imx8mp-audio-blk-ctrl" },
 	{ /* sentinel */ }
@@ -380,11 +269,9 @@ MODULE_DEVICE_TABLE(of, clk_imx8mp_audiomix_of_match);
 
 static struct platform_driver clk_imx8mp_audiomix_driver = {
 	.probe	= clk_imx8mp_audiomix_probe,
-	.remove_new = clk_imx8mp_audiomix_remove,
 	.driver = {
 		.name = "imx8mp-audio-blk-ctrl",
 		.of_match_table = clk_imx8mp_audiomix_of_match,
-		.pm = pm_ptr(&clk_imx8mp_audiomix_pm_ops),
 	},
 };
 

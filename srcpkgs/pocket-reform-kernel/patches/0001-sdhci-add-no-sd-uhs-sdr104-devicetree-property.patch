From 9f11ce621bccb07064ccc9c564fb0cb20612e1cd Mon Sep 17 00:00:00 2001
From: Troy Kisky <troy.kisky@boundarydevices.com>
Date: Fri, 1 Dec 2017 18:32:51 -0700
Subject: [PATCH 1/3] sdhci: add no-sd-uhs-sdr104 devicetree property

Signed-off-by: Troy Kisky <troy.kisky@boundarydevices.com>
---
 drivers/mmc/host/sdhci.c | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -16,6 +16,7 @@
 #include <linux/highmem.h>
 #include <linux/io.h>
 #include <linux/module.h>
+#include <linux/of.h>
 #include <linux/dma-mapping.h>
 #include <linux/slab.h>
 #include <linux/scatterlist.h>
@@ -4550,12 +4551,19 @@ int sdhci_setup_host(struct sdhci_host *
 
 	/* SDR104 supports also implies SDR50 support */
 	if (host->caps1 & SDHCI_SUPPORT_SDR104) {
+		struct device_node *np;
+
 		mmc->caps |= MMC_CAP_UHS_SDR104 | MMC_CAP_UHS_SDR50;
-		/* SD3.0: SDR104 is supported so (for eMMC) the caps2
-		 * field can be promoted to support HS200.
-		 */
-		if (!(host->quirks2 & SDHCI_QUIRK2_BROKEN_HS200))
-			mmc->caps2 |= MMC_CAP2_HS200;
+		np = mmc->parent->of_node;
+		if (of_property_read_bool(np, "no-sd-uhs-sdr104")) {
+			mmc->caps &= ~MMC_CAP_UHS_SDR104;
+		} else {
+			/* SD3.0: SDR104 is supported so (for eMMC) the caps2
+			 * field can be promoted to support HS200.
+			 */
+			if (!(host->quirks2 & SDHCI_QUIRK2_BROKEN_HS200))
+				mmc->caps2 |= MMC_CAP2_HS200;
+		}
 	} else if (host->caps1 & SDHCI_SUPPORT_SDR50) {
 		mmc->caps |= MMC_CAP_UHS_SDR50;
 	}
